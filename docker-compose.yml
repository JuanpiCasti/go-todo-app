services:
  ginplayground:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ginplayground-server
    environment:
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_SSL_MODE: ${DATABASE_SSL_MODE}
      DATABASE_NAME: ${DATABASE_NAME}
      SSLROOTCERT: ${SSLROOTCERT}
      SERVER_PORT: ${SERVER_PORT}
      GO_MODE: ${GO_MODE}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      JWT_SECRET: ${JWT_SECRET}
      TOKEN_DURATION_MINUTES: ${TOKEN_DURATION_MINUTES}
      TRUSTED_PROXY_IPS: ${TRUSTED_PROXY_IPS}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:17.2-alpine3.21
    container_name: postgres-todo-app
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./scripts/db:/docker-entrypoint-initdb.d
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  db-data:
